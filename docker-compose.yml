version: '3.9'

# Lucia Agent Host - Docker Compose Configuration
#
# Services:
#   - lucia: Agent Host API (main application)
#   - redis: Task persistence and session state
#
# Features:
#   - Health checks for automatic restart
#   - Volume mounts for persistent data
#   - Environment-based configuration
#   - Network isolation with shared network
#   - Resource limits for stability
#
# Usage:
#   # Start all services
#   docker-compose up -d
#
#   # View logs
#   docker-compose logs -f lucia
#
#   # Stop services
#   docker-compose down
#
#   # Remove volumes (deletes persisted data)
#   docker-compose down -v

services:

  # ========================================================================
  # Redis Service - Task Persistence and Session State
  # ========================================================================
  redis:
    # Use official Redis 8.2 image with alpine for minimal size
    image: redis:8.2-alpine
    
    container_name: lucia-redis
    
    # Network configuration
    networks:
      - lucia-network
    
    # Port exposure (only on localhost for security)
    ports:
      - "127.0.0.1:6379:6379"
    
    # Command to enable persistence
    # AOF (Append-Only File) enabled for durability
    # maxmemory policy for automatic eviction
    command: >
      redis-server
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --loglevel notice
    
    # Volume for persistent data storage
    volumes:
      - redis-data:/data
    
    # Health check for automatic restart
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "PING"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Restart policy
    restart: unless-stopped
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "redis"
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Read-only filesystem except for /data
    read_only: true
    tmpfs:
      - /tmp


  # ========================================================================
  # Lucia Agent Host Service - Main Application
  # ========================================================================
  lucia:
    # Build from local Dockerfile
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.agenthost
      args:
        BUILD_CONFIGURATION: Release
        BUILD_TARGET_FRAMEWORK: net10.0
      cache_from:
        - lucia-agenthost:latest
    
    image: lucia-agenthost:latest
    
    container_name: lucia-agenthost
    
    # Depends on Redis being healthy
    depends_on:
      redis:
        condition: service_healthy
    
    # Network configuration
    networks:
      - lucia-network
    
    # Port exposure
    ports:
      - "127.0.0.1:5000:8080"  # HTTP API
      - "127.0.0.1:5001:8081"  # HTTPS (disabled in MVP)
    
    # Volume mounts
    volumes:
      # Configuration (read-only)
      - ./.env:/app/.env:ro
    
    # Environment variables from .env file
    env_file:
      - .env
    
    # Additional environment variables
    environment:
      # ASP.NET Core configuration
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      
      # Connection strings (must be set via .env)
      # - ConnectionStrings__chat-model=Endpoint=...;AccessKey=...;Model=...;Provider=openai
      # - ConnectionStrings__home-assistant=http://homeassistant:8123
      # - ConnectionStrings__redis=redis://redis:6379
      
      # Logging
      - LUCIA_LOG_LEVEL=Information
      
      # Observability
      - OTEL_ENABLED=true
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
      
      # .NET Runtime
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - DOTNET_RUNNING_IN_CONTAINER=true
      - COMPlus_EnableDiagnostics=0
    
    # Health check for automatic restart
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '1'
          memory: 512M
    
    # Restart policy
    restart: unless-stopped
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
        tag: "lucia"
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Read-only filesystem for security
    read_only: true
    tmpfs:
      - /tmp
      - /app/bin
    
    # Capability dropping for reduced attack surface
    cap_drop:
      - NET_RAW
      - SYS_PTRACE
      - SYS_ADMIN


  # ========================================================================
  # Optional: Home Assistant Service (for local testing)
  # ========================================================================
  # Uncomment to run Home Assistant in same Docker Compose
  # homeassistant:
  #   image: homeassistant/home-assistant:latest
  #   container_name: lucia-homeassistant
  #   networks:
  #     - lucia-network
  #   ports:
  #     - "127.0.0.1:8123:8123"
  #   environment:
  #     - TZ=UTC
  #   volumes:
  #     - homeassistant-data:/config
  #   restart: unless-stopped


# ============================================================================
# Networks
# ============================================================================
networks:
  lucia-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16


# ============================================================================
# Volumes
# ============================================================================
volumes:
  # Redis persistent data
  redis-data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      # Change to local driver for persistent storage:
      # driver_opts:
      #   type: none
      #   o: bind
      #   device: /data/lucia/redis
  
  # Uncomment for Home Assistant persistent data
  # homeassistant-data:
  #   driver: local

